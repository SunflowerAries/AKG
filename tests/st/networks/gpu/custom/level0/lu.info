{"composite":true,"composite_graph":"kernel_graph_0","compute_capability":"7.0","id":0,"input_desc":[[{"data_type":"float32","format":"DefaultFormat","shape":[128,128],"tensor_name":"input_0"}],[{"data_type":"float32","format":"DefaultFormat","name":"input_1","shape":[128,128],"tensor_name":"input_1"}]],"op":"Fused_11504035004668749857","op_desc":[{"attr":[{"data_type":"str","name":"func_name","value":"solver"},{"data_type":"str","name":"uniq_name","value":"Custom_solver_139802472265056"},{"data_type":"int","name":"fn_id","value":1286780256},{"data_type":"bool","name":"fake_output","value":false},{"data_type":"str","name":"imply_path","value":"lu.py"},{"data_type":"bool","name":"single_scalar_output","value":false},{"data_type":"str","name":"func_source_str","value":"def solver(a, b):\n  out = output_tensor(b.shape, b.dtype)\n  len = a.shape[0]\n  for k in range(len):\n    for n in range(len):\n      i = len - n - 1\n      out[i, k] = b[i, k] / a[i, i]\n      for j in range(i):\n        b[j, k] = b[j, k] - a[j, i] * out[i, k]\n  return out\n"},{"data_type":"str","name":"func_type","value":"hybrid"}],"impl_path":"","input_desc":[[{"data_type":"float32","format":"DefaultFormat","name":"input_0","shape":[128,128],"tensor_name":"input_0"}],[{"data_type":"float32","format":"DefaultFormat","name":"input_1","shape":[128,128],"tensor_name":"input_1"}]],"name":"Custom","output_desc":[{"data_type":"float32","format":"DefaultFormat","name":"output_0","shape":[128,128],"tensor_name":"output_0_0"}]}],"output_desc":[{"data_type":"float32","format":"DefaultFormat","shape":[128,128],"tensor_name":"output_0_0"}],"platform":"AKG","process":"cuda"}
